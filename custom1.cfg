route[REQINIT]{
	if(is_method("OPTIONS")){
		send_reply("200","ok");
	}
}

route[AUTH]{
	if is_method("REGISTER")||(from_uri==myself){
	if(!auth_check("$fd", "subscriber", "1")){
		auth_challenge("$fd","0");
		exit;
	}
	consume_credentials();
	}
}

route[REGISTRAR]{
	if(!is_method("REGISTER"))return;
	if(!save("location")){
		sl_reply_error();
		}
		exit;
	}


route[NATMANAGE]{
	force_rport();
	if is_request()&&is_method("REGISTER"){
		fix_nated_register();
		return;
		}
		//add_contact_alias();
		//fix_nated_contact();
	//xlog("L_INFO", "received avp before: $avp(REVEIVED)\n");
	//fix_nated_register();
	//xlog("L_INFO", "received after fix_nated_register: $avp(RECEIVED)\n");
}


route[LOCATION]{
	if(!lookup("location")){
		send_reply("404","Not found");
		return(-1);
		}
		return(1);
	}


	route[RELAY]{
		if(is_method("INVITE|BYE|SUBSCRIBE|UPDATE"))
			if(!t_is_set("failure_route"))t_on_failure("MANAGE_FAILURE");	
		if(!t_is_set("branch_route"))t_on_branch("BRANCH_MANAGE");
		if(!t_relay()){
			sl_reply_error();
			}
			exit;
	}

route[ADD_RR]{
	if(is_method("INVITE")&&!has_totag()){
		remove_hf("Route");
		record_route();
		}

	}	




route[WITHINDLG]{
	if(!has_totag())return(-1);
	if(loose_route())return(1);
	if(is_method("ACK")){
		if(t_check_trans()){
		return(1);
		}else{
		exit;
		}
		}
		sl_send_reply("404","Not here");
		exit;
	}	

route[CANCEL]{
	if (is_method("CANCEL")){
		if(!t_check_trans()){
			exit;
		}
		}
}

route[SDP]{
    if($rb==$null||$rb==""){
        return;
    }
    if(is_request() && is_method("BYE"))||(is_reply()&&$rs>299){
        rtpengine_manage();
        return;
    }

    rtpengine_manage("replace-origin replace-session-connection SIP-source-address $avp(direction)");
	add_rr_param(";proxy_media=yes");
}

route[REGISTER_ON_CARRIER]{
    dlg_manage();
    sql_pvquery("ca", "select r_username, auth_username, auth_password, realm, l_domain, r_domain from uacreg", "$avp(fromName),$avp(uname),$avp(passwd),$avp(realm),$avp(l_ipaddr),$avp(dst_ipaddr)");
    
    uac_replace_from("sip:$avp(fromName)@$avp(l_ipaddr)");
    uac_replace_to("sip:$tU@$avp(dst_ipaddr)");	
    $ru="sip:"+$rU+"@"+$avp(dst_ipaddr);
    remove_hf("Contact");
    $var(contact)="sip:"+$avp(fromName)+"@"+$avp(dst_ipaddr);
    insert_hf("Contact: <$var(contact)>\r\n","Call-ID");
	setflag(FLAG_TO_CARRIER);
	}


route[CS]{
 if (ds_is_from_list(GATEWAYS)){
		if is_method(("OPTIONS")){
		sl_send_reply(200,"ok");
		exit;
		}
	setsflag(FLAG_INTERNALLY_SOURCED);
	$avp(direction)="direction=private direction=public";
		}
	}
	
route[FIX_CONTACT]{
	if !isflagset(FLAG_TO_CARRIER)&&!issflagset(FLAG_INTERNALLY_SOURCED){
			fix_nated_contact();
			return();
			}
	//if(is_method("INVITE")){
                                //if($rd != $td) {
                                        //remove_hf("To");
                                        //insert_hf("To: <sip:$tU@$rd;user=phone>\r\n", "CSeq");
                                }
                        }
						
	}

route[DS]{
	if(!ds_select_dst(GATEWAYS,4)){
		send_reply("404", "No destination");
		return(-1);
		}
		$avp(direction)="direction=public direction=private";
		return(1);
}



